package uk.gov.justice.digital.hmpps.electronicmonitoringdatastoreapi.model

import uk.gov.justice.digital.hmpps.electronicmonitoringdatastoreapi.helpers.nullableLocalDateTime
import uk.gov.justice.digital.hmpps.electronicmonitoringdatastoreapi.model.athena.AthenaOrderDetailsDTO
import java.time.LocalDateTime

data class OrderDetails(
  val specials: String,
  val legacySubjectId: String,
  val legacyOrderId: String?,
  val firstName: String? = "",
  val lastName: String? = "",
  val alias: String? = "",
  val dateOfBirth: LocalDateTime? = null,
  val adultOrChild: String? = "",
  val sex: String? = "",
  val contact: String? = "",
  val primaryAddressLine1: String? = "",
  val primaryAddressLine2: String? = "",
  val primaryAddressLine3: String? = "",
  val primaryAddressPostCode: String? = "",
  val phoneOrMobileNumber: String? = "",
  val ppo: String? = "",
  val mappa: String? = "",
  val technicalBail: String? = "",
  val manualRisk: String? = "",
  val offenceRisk: Boolean,
  val postCodeRisk: String? = "",
  val falseLimbRisk: String? = "",
  val migratedRisk: String? = "",
  val rangeRisk: String? = "",
  val reportRisk: String? = "",
  val orderStartDate: LocalDateTime? = null,
  val orderEndDate: LocalDateTime? = null,
  val orderType: String? = "",
  val orderTypeDescription: String? = "",
  val orderTypeDetail: String? = "",
  val wearingWristPid: String? = "",
  val notifyingOrganisationDetailsName: String? = "",
  val responsibleOrganisation: String? = "",
  val responsibleOrganisationDetailsRegion: String? = "",
) {
  constructor(dto: AthenaOrderDetailsDTO) : this (
    specials = "no",
    legacySubjectId = dto.legacySubjectId,
    legacyOrderId = dto.legacyOrderId,
    firstName = dto.firstName,
    lastName = dto.lastName,
    alias = dto.alias,
    dateOfBirth = nullableLocalDateTime(dto.dateOfBirth),
    adultOrChild = dto.adultOrChild,
    sex = dto.sex,
    contact = dto.contact,
    primaryAddressLine1 = dto.primaryAddressLine1,
    primaryAddressLine2 = dto.primaryAddressLine2,
    primaryAddressLine3 = dto.primaryAddressLine3,
    primaryAddressPostCode = dto.primaryAddressPostCode,
    phoneOrMobileNumber = dto.phoneOrMobileNumber,
    ppo = dto.ppo,
    mappa = dto.mappa,
    technicalBail = dto.technicalBail,
    manualRisk = dto.manualRisk,
    offenceRisk = dto.offenceRisk,
    postCodeRisk = dto.postCodeRisk,
    falseLimbRisk = dto.falseLimbRisk,
    migratedRisk = dto.migratedRisk,
    rangeRisk = dto.rangeRisk,
    reportRisk = dto.reportRisk,
    orderStartDate = nullableLocalDateTime(dto.orderStartDate),
    orderEndDate = nullableLocalDateTime(dto.orderEndDate),
    orderType = dto.orderType,
    orderTypeDescription = dto.orderTypeDescription,
    orderTypeDetail = dto.orderTypeDetail,
    wearingWristPid = dto.wearingWristPid,
    notifyingOrganisationDetailsName = dto.notifyingOrganisationDetailsName,
    responsibleOrganisation = dto.responsibleOrganisation,
    responsibleOrganisationDetailsRegion = dto.responsibleOrganisationDetailsRegion,
  )
}
