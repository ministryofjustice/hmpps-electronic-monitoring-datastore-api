# List of the jobs in CircleCI we may need to replicate: */
# - way to send alerts to slack
# - jobs
#   - validate
# - workflows
#   - build, test and deploty (which contains jobs) [WORKFLOW]
#     - jobs:
#       - validate (runs job as devined above)
#       - hmpps/helm_lint                    <-- (probs can't replicate)
#       - hmpps/build-multiplatform-docker   <-- (probs can't replicate)
#       - deploy-env
#       - [COMMENTED OUT JOBS]
#         - request preprod aproval
#         - deploy env (again, but with preprod)
#         - request-prod-approval
#         - deploy-env (but prod)
#   - Security [WORKFLOW] <-- (probs can't replicate)
#     - has triggers: 7:15 daily
#     - has jobs: owasp, trivy, and veracode, all in the hmpps orb
#   - Security weekly [WORKFLOW] <-- (probs can't replicate)
#     - has triggers: 5am monday
#     - has jobs: veracode, from the hmpps orb



# What does validate do? Using java 21, it... 
#  -> checks out the code
#  -> restores the cache
#       This is the cached dependencies generated in a previous run on circleCI
#       It's saved/recalled with the checksum of the build.gradle.kts file
#         OR, if that's not there, any generic gradle cache
#  -> runs ./gradlew check
#       This is basically just ./gradlew test
#       You can add to this with plugins in build.gradle.kts
#  -> saves the cache in the same place
#  -> stores test results and artefacts in /build

#  Original code from .circleci/config.yml
# validate:
#   executor:
#     name: hmpps/java
#     tag: "21.0"
#   steps:
#     - checkout
#     - restore_cache:
#         keys:
#           - gradle-{{ checksum "build.gradle.kts" }}
#           - gradle-
#     - run:
#         command: ./gradlew check
#     - save_cache:
#         paths:
#           - ~/.gradle
#         key: gradle-{{ checksum "build.gradle.kts" }}
#     - store_test_results:
#         path: build/test-results
#     - store_artifacts:
#         path: build/reports/tests